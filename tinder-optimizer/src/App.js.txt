import React, { useState } from 'react';

const TinderProfileOptimizer = () => {
  const [currentScreen, setCurrentScreen] = useState('home');
  const [userProfile, setUserProfile] = useState({
    bio: '',
    age: '',
    goals: 'casual',
    name: ''
  });
  const [analysis, setAnalysis] = useState(null);
  const [loading, setLoading] = useState(false);

  const analyzeBioAdvanced = (bio, goals) => {
    const words = bio.split(/\s+/).filter(word => word.length > 0);
    const sentences = bio.split(/[.!?]+/).filter(s => s.trim().length > 0);
    
    const personalityKeywords = {
      confident: ['confident', 'bold', 'leader', 'ambitious', 'driven'],
      funny: ['funny', 'humor', 'laugh', 'joke', 'witty'],
      adventurous: ['adventure', 'travel', 'explore', 'outdoors', 'hiking'],
      creative: ['creative', 'art', 'music', 'write', 'design']
    };

    const detectedTraits = {};
    Object.keys(personalityKeywords).forEach(trait => {
      const matches = personalityKeywords[trait].filter(keyword => 
        bio.toLowerCase().includes(keyword.toLowerCase())
      );
      if (matches.length > 0) {
        detectedTraits[trait] = matches.length;
      }
    });

    const hasEmojis = /[\u{1F600}-\u{1F64F}]|[\u{1F300}-\u{1F5FF}]|[\u{1F680}-\u{1F6FF}]|[\u{1F1E0}-\u{1F1FF}]/u.test(bio);
    const hasQuestions = bio.includes('?');
    const hasCallToAction = /let's|message|chat|talk|connect|meet/i.test(bio);

    const lengthScore = words.length >= 15 && words.length <= 50 ? 100 : 
                      words.length < 15 ? (words.length / 15) * 100 : 
                      Math.max(0, 100 - ((words.length - 50) * 2));

    const personalityScore = Object.keys(detectedTraits).length * 15;
    const engagementScore = (hasEmojis ? 25 : 0) + (hasQuestions ? 25 : 0) + (hasCallToAction ? 30 : 0);

    const overallScore = Math.max(0, Math.min(100, 
      lengthScore * 0.3 + personalityScore * 0.4 + engagementScore * 0.3
    ));

    return {
      wordCount: words.length,
      sentenceCount: sentences.length,
      personalityTraits: detectedTraits,
      hasEmojis,
      hasQuestions,
      hasCallToAction,
      scores: {
        overall: Math.round(overallScore),
        length: Math.round(lengthScore),
        personality: Math.round(personalityScore),
        engagement: Math.round(engagementScore)
      }
    };
  };

  const generateSuggestions = (bioAnalysis) => {
    const suggestions = [];

    if (bioAnalysis.wordCount < 15) {
      suggestions.push({
        title: 'Bio too short',
        description: 'Expand your bio to 15-50 words for better engagement.',
        impact: '+15 points'
      });
    }

    if (Object.keys(bioAnalysis.personalityTraits).length === 0) {
      suggestions.push({
        title: 'Add personality traits',
        description: 'Include words that show your personality (adventurous, creative, funny, etc.)',
        impact: '+20 points'
      });
    }

    if (!bioAnalysis.hasEmojis) {
      suggestions.push({
        title: 'Add emojis',
        description: 'Include 1-2 relevant emojis to make your profile more appealing',
        impact: '+8 points'
      });
    }

    return suggestions;
  };

  const handleAnalysis = () => {
    if (!userProfile.bio.trim()) {
      alert('Please enter a bio to analyze');
      return;
    }

    setLoading(true);
    
    setTimeout(() => {
      const bioAnalysis = analyzeBioAdvanced(userProfile.bio, userProfile.goals);
      const suggestions = generateSuggestions(bioAnalysis);

      setAnalysis({
        bio: bioAnalysis,
        suggestions,
        timestamp: new Date().toISOString()
      });
      
      setLoading(false);
      setCurrentScreen('results');
    }, 2000);
  };

  const bioTemplates = {
    casual: [
      "Adventure seeker who loves good food and even better company üåÆ Always down for spontaneous plans or Netflix marathons. Let's explore the city together!",
      "Dog lover, coffee enthusiast, and professional overthinker ‚òï Looking for someone to laugh at my terrible jokes",
      "Fitness enthusiast by day, foodie by night üèÉ‚Äç‚ôÇÔ∏è Love trying new restaurants and staying active"
    ],
    'long-term': [
      "Family-oriented professional seeking genuine connection üíï Love deep conversations and planning future adventures together",
      "Believer in old-school romance and building something real ‚ù§Ô∏è Looking for my best friend and life partner",
      "Ready to delete this app with the right person üòä Value loyalty, communication, and shared dreams"
    ]
  };

  const generateRandomBio = () => {
    const templates = bioTemplates[userProfile.goals] || bioTemplates.casual;
    const randomTemplate = templates[Math.floor(Math.random() * templates.length)];
    setUserProfile({ ...userProfile, bio: randomTemplate });
  };

  const HomeScreen = () => (
    <div style={{
      minHeight: '100vh',
      background: 'linear-gradient(135deg, #fdf2f8 0%, #fce7f3 100%)',
      padding: '20px'
    }}>
      <div style={{ maxWidth: '800px', margin: '0 auto' }}>
        <div style={{ textAlign: 'center', marginBottom: '40px' }}>
          <h1 style={{ 
            fontSize: '48px', 
            fontWeight: 'bold', 
            color: '#1f2937',
            marginBottom: '10px'
          }}>
            ‚ù§Ô∏è Profile Optimizer
          </h1>
          <p style={{ fontSize: '20px', color: '#6b7280', marginBottom: '30px' }}>
            Get more matches with AI-powered profile optimization
          </p>
          
          <div style={{ 
            display: 'grid', 
            gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', 
            gap: '20px',
            marginBottom: '30px'
          }}>
            <div style={{
              backgroundColor: 'white',
              padding: '20px',
              borderRadius: '15px',
              boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
              textAlign: 'center'
            }}>
              <div style={{ fontSize: '32px', marginBottom: '10px' }}>üìä</div>
              <h3 style={{ fontWeight: '600', color: '#1f2937', marginBottom: '8px' }}>Bio Analysis</h3>
              <p style={{ color: '#6b7280', fontSize: '14px' }}>AI analyzes your tone, personality, and engagement factors</p>
            </div>
            <div style={{
              backgroundColor: 'white',
              padding: '20px',
              borderRadius: '15px',
              boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
              textAlign: 'center'
            }}>
              <div style={{ fontSize: '32px', marginBottom: '10px' }}>üì∏</div>
              <h3 style={{ fontWeight: '600', color: '#1f2937', marginBottom: '8px' }}>Photo Tips</h3>
              <p style={{ color: '#6b7280', fontSize: '14px' }}>Get tips for better photo selection and ordering</p>
            </div>
            <div style={{
              backgroundColor: 'white',
              padding: '20px',
              borderRadius: '15px',
              boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
              textAlign: 'center'
            }}>
              <div style={{ fontSize: '32px', marginBottom: '10px' }}>üéØ</div>
              <h3 style={{ fontWeight: '600', color: '#1f2937', marginBottom: '8px' }}>Goal-Based Tips</h3>
              <p style={{ color: '#6b7280', fontSize: '14px' }}>Customized advice based on your dating goals</p>
            </div>
          </div>
        </div>

        <div style={{
          backgroundColor: 'white',
          borderRadius: '20px',
          padding: '40px',
          boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.1)'
        }}>
          <h2 style={{ fontSize: '24px', fontWeight: 'bold', color: '#1f2937', marginBottom: '20px' }}>
            Enter Your Profile Information
          </h2>
          
          <div style={{ marginBottom: '20px' }}>
            <label style={{ display: 'block', fontSize: '14px', fontWeight: '500', color: '#374151', marginBottom: '8px' }}>
              Name
            </label>
            <input
              type="text"
              value={userProfile.name}
              onChange={(e) => setUserProfile({...userProfile, name: e.target.value})}
              style={{
                width: '100%',
                padding: '12px 16px',
                border: '1px solid #d1d5db',
                borderRadius: '8px',
                fontSize: '16px',
                boxSizing: 'border-box'
              }}
              placeholder="Your name"
            />
          </div>

          <div style={{ marginBottom: '20px' }}>
            <label style={{ display: 'block', fontSize: '14px', fontWeight: '500', color: '#374151', marginBottom: '8px' }}>
              Dating Goal
            </label>
            <select
              value={userProfile.goals}
              onChange={(e) => setUserProfile({...userProfile, goals: e.target.value})}
              style={{
                width: '100%',
                padding: '12px 16px',
                border: '1px solid #d1d5db',
                borderRadius: '8px',
                fontSize: '16px',
                boxSizing: 'border-box'
              }}
            >
              <option value="casual">Casual Dating</option>
              <option value="long-term">Long-term Relationship</option>
            </select>
          </div>

          <div style={{ marginBottom: '20px' }}>
            <label style={{ display: 'block', fontSize: '14px', fontWeight: '500', color: '#374151', marginBottom: '8px' }}>
              Bio
            </label>
            <textarea
              value={userProfile.bio}
              onChange={(e) => setUserProfile({...userProfile, bio: e.target.value})}
              rows={4}
              style={{
                width: '100%',
                padding: '12px 16px',
                border: '1px solid #d1d5db',
                borderRadius: '8px',
                fontSize: '16px',
                resize: 'vertical',
                boxSizing: 'border-box'
              }}
              placeholder="Tell us about yourself..."
            />
            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: '8px' }}>
              <span style={{ fontSize: '14px', color: '#6b7280' }}>
                {userProfile.bio.length}/500 characters
              </span>
              <button
                onClick={generateRandomBio}
                style={{
                  fontSize: '14px',
                  color: '#ec4899',
                  background: 'none',
                  border: 'none',
                  cursor: 'pointer',
                  fontWeight: '500'
                }}
              >
                Generate Sample Bio
              </button>
            </div>
          </div>

          <button
            onClick={handleAnalysis}
            disabled={loading}
            style={{
              width: '100%',
              background: loading ? '#9ca3af' : 'linear-gradient(135deg, #ec4899 0%, #be185d 100%)',
              color: 'white',
              padding: '16px 24px',
              border: 'none',
              borderRadius: '8px',
              fontSize: '18px',
              fontWeight: '600',
              cursor: loading ? 'not-allowed' : 'pointer',
              transition: 'all 0.2s'
            }}
          >
            {loading ? (
              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                <div style={{
                  width: '24px',
                  height: '24px',
                  border: '2px solid #ffffff',
                  borderTop: '2px solid transparent',
                  borderRadius: '50%',
                  animation: 'spin 1s linear infinite',
                  marginRight: '12px'
                }}></div>
                Analyzing Profile...
              </div>
            ) : (
              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                ‚ö° Analyze My Profile
              </div>
            )}
          </button>
        </div>
      </div>
    </div>
  );

  const ResultsScreen = () => (
    <div style={{
      minHeight: '100vh',
      background: 'linear-gradient(135deg, #eff6ff 0%, #dbeafe 100%)',
      padding: '20px'
    }}>
      <div style={{ maxWidth: '1000px', margin: '0 auto' }}>
        <div style={{
          backgroundColor: 'white',
          borderRadius: '20px',
          padding: '40px',
          boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.1)',
          marginBottom: '30px'
        }}>
          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '30px' }}>
            <h1 style={{ fontSize: '32px', fontWeight: 'bold', color: '#1f2937' }}>
              Profile Analysis Results
            </h1>
            <button
              onClick={() => setCurrentScreen('home')}
              style={{
                padding: '8px 16px',
                backgroundColor: '#6b7280',
                color: 'white',
                border: 'none',
                borderRadius: '8px',
                cursor: 'pointer'
              }}
            >
              ‚Üê Back to Editor
            </button>
          </div>

          <div style={{ textAlign: 'center', marginBottom: '30px' }}>
            <div style={{
              display: 'inline-flex',
              alignItems: 'center',
              justifyContent: 'center',
              width: '120px',
              height: '120px',
              borderRadius: '50%',
              background: 'linear-gradient(135deg, #10b981 0%, #3b82f6 100%)',
              color: 'white',
              marginBottom: '16px'
            }}>
              <span style={{ fontSize: '36px', fontWeight: 'bold' }}>
                {analysis?.bio?.scores?.overall || 0}
              </span>
            </div>
            <h2 style={{ fontSize: '24px', fontWeight: '600', color: '#1f2937', marginBottom: '8px' }}>
              Overall Profile Score
            </h2>
            <p style={{ color: '#6b7280' }}>
              {analysis?.bio?.scores?.overall >= 80 ? 'Excellent! Your profile is highly optimized.' :
               analysis?.bio?.scores?.overall >= 60 ? 'Good! Some improvements could boost your matches.' :
               'Needs work. Follow our suggestions to improve significantly.'}
            </p>
          </div>

          <div style={{ 
            display: 'grid', 
            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', 
            gap: '20px',
            marginBottom: '30px'
          }}>
            <div style={{
              background: 'linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%)',
              padding: '20px',
              borderRadius: '12px'
            }}>
              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '12px' }}>
                <span style={{ color: '#1e40af', fontWeight: '600' }}>Length Score</span>
                <span style={{ fontSize: '24px', fontWeight: 'bold', color: '#1e40af' }}>
                  {analysis?.bio?.scores?.length || 0}
                </span>
              </div>
              <div style={{ width: '100%', backgroundColor: '#93c5fd', borderRadius: '9999px', height: '8px' }}>
                <div 
                  style={{ 
                    backgroundColor: '#1d4ed8', 
                    height: '8px', 
                    borderRadius: '9999px',
                    width: `${analysis?.bio?.scores?.length || 0}%`,
                    transition: 'width 0.5s ease'
                  }}
                ></div>
              </div>
            </div>

            <div style={{
              background: 'linear-gradient(135deg, #f3e8ff 0%, #e9d5ff 100%)',
              padding: '20px',
              borderRadius: '12px'
            }}>
              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '12px' }}>
                <span style={{ color: '#7c3aed', fontWeight: '600' }}>Personality</span>
                <span style={{ fontSize: '24px', fontWeight: 'bold', color: '#7c3aed' }}>
                  {analysis?.bio?.scores?.personality || 0}
                </span>
              </div>
              <div style={{ width: '100%', backgroundColor: '#c4b5fd', borderRadius: '9999px', height: '8px' }}>
                <div 
                  style={{ 
                    backgroundColor: '#8b5cf6', 
                    height: '8px', 
                    borderRadius: '9999px',
                    width: `${Math.min(100, analysis?.bio?.scores?.personality || 0)}%`,
                    transition: 'width 0.5s ease'
                  }}
                ></div>
              </div>
            </div>

            <div style={{
              background: 'linear-gradient(135deg, #dcfce7 0%, #bbf7d0 100%)',
              padding: '20px',
              borderRadius: '12px'
            }}>
              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '12px' }}>
                <span style={{ color: '#059669', fontWeight: '600' }}>Engagement</span>
                <span style={{ fontSize: '24px', fontWeight: 'bold', color: '#059669' }}>
                  {analysis?.bio?.scores?.engagement || 0}
                </span>
              </div>
              <div style={{ width: '100%', backgroundColor: '#86efac', borderRadius: '9999px', height: '8px' }}>
                <div 
                  style={{ 
                    backgroundColor: '#10b981', 
                    height: '8px', 
                    borderRadius: '9999px',
                    width: `${analysis?.bio?.scores?.engagement || 0}%`,
                    transition: 'width 0.5s ease'
                  }}
                ></div>
              </div>
            </div>
          </div>
        </div>

        {/* Bio Analysis Details */}
        <div style={{
          backgroundColor: 'white',
          borderRadius: '20px',
          padding: '30px',
          boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',
          marginBottom: '30px'
        }}>
          <h2 style={{ fontSize: '24px', fontWeight: 'bold', color: '#1f2937', marginBottom: '20px' }}>
            üìä Bio Analysis
          </h2>

          <div style={{ 
            display: 'grid', 
            gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))', 
            gap: '16px',
            marginBottom: '20px'
          }}>
            <div style={{ backgroundColor: '#f9fafb', padding: '16px', borderRadius: '8px', textAlign: 'center' }}>
              <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#1f2937' }}>
                {analysis?.bio?.wordCount || 0}
              </div>
              <div style={{ fontSize: '14px', color: '#6b7280' }}>Words</div>
            </div>
            <div style={{ backgroundColor: '#f9fafb', padding: '16px', borderRadius: '8px', textAlign: 'center' }}>
              <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#1f2937' }}>
                {analysis?.bio?.sentenceCount || 0}
              </div>
              <div style={{ fontSize: '14px', color: '#6b7280' }}>Sentences</div>
            </div>
          </div>

          {analysis?.bio?.personalityTraits && Object.keys(analysis.bio.personalityTraits).length > 0 && (
            <div style={{ marginBottom: '20px' }}>
              <h3 style={{ fontWeight: '600', color: '#1f2937', marginBottom: '12px' }}>
                Detected Personality Traits
              </h3>
              <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>
                {Object.keys(analysis.bio.personalityTraits).map(trait => (
                  <span key={trait} style={{
                    padding: '6px 12px',
                    backgroundColor: '#dbeafe',
                    color: '#1e40af',
                    borderRadius: '9999px',
                    fontSize: '14px',
                    textTransform: 'capitalize'
                  }}>
                    {trait}
                  </span>
                ))}
              </div>
            </div>
          )}

          <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
            <div style={{ display: 'flex', alignItems: 'center' }}>
              <span style={{ 
                color: analysis?.bio?.hasEmojis ? '#059669' : '#dc2626',
                marginRight: '8px',
                fontSize: '20px'
              }}>
                {analysis?.bio?.hasEmojis ? '‚úÖ' : '‚ùå'}
              </span>
              <span style={{ color: analysis?.bio?.hasEmojis ? '#059669' : '#dc2626' }}>
                {analysis?.bio?.hasEmojis ? 'Contains emojis' : 'No emojis detected'}
              </span>
            </div>
            <div style={{ display: 'flex', alignItems: 'center' }}>
              <span style={{ 
                color: analysis?.bio?.hasCallToAction ? '#059669' : '#dc2626',
                marginRight: '8px',
                fontSize: '20px'
              }}>
                {analysis?.bio?.hasCallToAction ? '‚úÖ' : '‚ùå'}
              </span>
              <span style={{ color: analysis?.bio?.hasCallToAction ? '#059669' : '#dc2626' }}>
                {analysis?.bio?.hasCallToAction ? 'Has call to action' : 'Missing call to action'}
              </span>
            </div>
          </div>
        </div>

        {/* Suggestions */}
        {analysis?.suggestions && analysis.suggestions.length > 0 && (
          <div style={{
            backgroundColor: 'white',
            borderRadius: '20px',
            padding: '30px',
            boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)'
          }}>
            <h2 style={{ fontSize: '24px', fontWeight: 'bold', color: '#1f2937', marginBottom: '20px' }}>
              üí° Improvement Suggestions
            </h2>

            <div style={{ display: 'flex', flexDirection: 'column', gap: '16px' }}>
              {analysis.suggestions.map((suggestion, index) => (
                <div key={index} style={{
                  padding: '20px',
                  borderRadius: '12px',
                  borderLeft: '4px solid #3b82f6',
                  backgroundColor: '#f8fafc'
                }}>
                  <h3 style={{ fontWeight: '600', color: '#1f2937', marginBottom: '8px' }}>
                    {suggestion.title}
                  </h3>
                  <p style={{ color: '#374151', marginBottom: '8px', lineHeight: '1.5' }}>
                    {suggestion.description}
                  </p>
                  <div style={{ fontSize: '14px', fontWeight: '600', color: '#2563eb' }}>
                    {suggestion.impact}
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}
      </div>
      
      <style jsx>{`
        @keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }
      `}</style>
    </div>
  );

  return (
    <div>
      {currentScreen === 'home' && <HomeScreen />}
      {currentScreen === 'results' && analysis && <ResultsScreen />}
    </div>
  );
};

export default TinderProfileOptimizer;
